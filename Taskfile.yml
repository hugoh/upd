version: "3"

vars:
  STATICDIR: internal/status/static
  HTML: "{{.STATICDIR}}/stats.html"
  MIN: "{{.STATICDIR}}/stats.min.html"
  GOBIN: $(go env GOPATH)/bin
  ISPRESENT: test -x "{{.GOBIN}}"

tasks:
  default:
    deps: [dev]

  coverage:
    summary: Generate test coverage
    deps: [devdepcover]
    cmds:
      - task test -- -coverprofile=./cover.out -covermode=atomic -coverpkg=./...
    sources:
      - "**/*.go"
    generates:
      - cover.out

  covercheck:
    summary: Check test coverage
    deps: [coverage]
    cmds:
      - "{{.GOBIN}}/go-test-coverage --config=./.testcoverage.yml"

  dev:
    summary: Development mode
    deps: [minify]
    cmd: go run . {{.CLI_ARGS}}

  minify:
    summary: Minify HTML
    deps: [devdepminify]
    sources:
      - "{{.HTML}}"
    generates:
      - "{{.MIN}}"
    cmds:
      - minify -o {{.MIN}} {{.HTML}}

  build:
    summary: Build application
    deps: [minify]
    cmd: go build -o dist/upd .

  clean:
    summary: Clean the project
    cmds:
      - go clean
      - rm {{.MIN}}

  devdep:
    summary: Install dev dependencies
    cmds:
      # Linters
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - go install honnef.co/go/tools/cmd/staticcheck@latest
      - go install github.com/securego/gosec/v2/cmd/gosec@latest
      # Formatters
      - go install mvdan.cc/gofumpt@latest
      - go install github.com/daixiang0/gci@latest
    status:
      - "{{.ISPRESENT}}/golangci-lint"
      - "{{.ISPRESENT}}/staticcheck"
      - "{{.ISPRESENT}}/gosec"
      - "{{.ISPRESENT}}/gofumpt"
      - "{{.ISPRESENT}}/gci"

  devdepcover:
    summary: Install test coverage tool
    cmds:
      - go install github.com/vladopajic/go-test-coverage/v2@latest
    status:
      - "{{.ISPRESENT}}/go-test-coverage"

  devdepminify:
    summary: Install minification tool
    cmds:
      - go install github.com/tdewolff/minify/v2/cmd/minify@latest
    status:
      - "{{.ISPRESENT}}/minify"

  fixlint:
    summary: Fix lint issues
    deps: [devdep]
    cmds:
      - golangci-lint run --fix

  fmt:
    summary: Format the code
    deps: [devdep]
    cmds:
      - gci write .
      - gofumpt -w .

  tidy:
    summary: Tidy the module
    cmds:
      - go mod tidy -v

  depup:
    summary: Upgrades dependencies
    cmds:
      - go get -u -t ./...
      - task tidy

  lint:
    summary: Run linters
    deps: [devdep, minify]
    cmds:
      - go vet ./...
      - golangci-lint run ./...
      - staticcheck ./...
      - gosec -fmt=golint -quiet ./...

  test:
    summary: Run tests
    cmd: go test ./... {{.CLI_ARGS}}
