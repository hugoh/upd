version: "3"

vars:
  STATICDIR: internal/status/static
  HTML: "{{.STATICDIR}}/stats.html"
  MIN: "{{.STATICDIR}}/stats.min.html"
  COVEROUT: cover.out
  GOBIN: $(go env GOPATH)/bin

tasks:
  default:
    deps: [dev]

  coverage:
    summary: Generate test coverage
    cmds:
      - task: test
        vars:
          CLI_ARGS: -coverprofile={{.COVEROUT}} -covermode=atomic -coverpkg=./...
    sources:
      - "**/*.go"
    generates:
      - "{{.COVEROUT}}"

  covercheck:
    summary: Check test coverage
    deps:
      - coverage
    cmds:
      - go tool github.com/vladopajic/go-test-coverage/v2 --config=./.testcoverage.yml

  dev:
    summary: Development mode
    deps: [minify]
    cmd: go run . {{.CLI_ARGS}}

  minify:
    summary: Minify HTML
    sources:
      - "{{.HTML}}"
    generates:
      - "{{.MIN}}"
    cmds:
      - go tool github.com/tdewolff/minify/v2/cmd/minify -o {{.MIN}} {{.HTML}}

  build:
    summary: Build application
    deps: [minify]
    cmd: go build -o dist/upd .

  clean:
    summary: Clean the project
    cmds:
      - go clean
      - rm -f {{.MIN}}
      - rm -f {{.COVEROUT}}

  fixlint:
    summary: Fix lint issues
    cmds:
      - go tool github.com/golangci/golangci-lint/v2/cmd/golangci-lint run --fix

  fmt:
    summary: Format the code
    cmds:
      - go tool github.com/daixiang0/gci write .
      - go tool mvdan.cc/gofumpt -w .

  tidy:
    summary: Tidy the module
    cmds:
      - go mod tidy -v

  depup:
    summary: Upgrades dependencies
    cmds:
      - go get -u -t ./...
      - task tidy

  lint:
    summary: Lint code
    deps:
      - task: runlinter
        vars:
          RUN: vet
      - task: runlinter
        vars:
          RUN: tool honnef.co/go/tools/cmd/staticcheck
      - task: runlinter
        vars:
          RUN: tool github.com/securego/gosec/v2/cmd/gosec -fmt=golint -quiet
      - task: runlinter
        vars:
          RUN: tool github.com/golangci/golangci-lint/v2/cmd/golangci-lint run

  runlinter:
    summary: Run specific linter
    deps: [minify]
    requires:
      vars: [RUN]
    cmd: go {{.RUN}} ./...

  test:
    summary: Run tests
    deps: [minify]
    cmd: go test ./... {{.CLI_ARGS}}
